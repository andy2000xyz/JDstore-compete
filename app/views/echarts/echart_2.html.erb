<!DOCTYPE html>
<html lang="en">
<head>
  <title>Echarts</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">


  <script src="https://cdn.bootcss.com/echarts/4.1.0.rc2/echarts.js"></script>

  <style>
    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */
    .row.content {height: 600px}

    /* Set gray background color and 100% height */
    .sidenav {
      background-color: #f1f1f1;
      height: 100%;
    }

    /* On small screens, set height to 'auto' for the grid */
    @media screen and (max-width: 767px) {
      .row.content {height: auto;}
    }
  </style>
</head>
<body>
<div class="container-fluid">
  <div class="row content">
    <div class="col-md-3 col-sm-3 sidenav hidden-xs">
      <h2><img src="/images/logo2.png" alt="数据实验室"></h2><hr>
      <ul class="nav nav-pills nav-stacked">
        <li><a href="echart-1">project 1</a></li>
        <li class="active"><a href="echart-2">project 2</a></li>
        <li><a href="echart-3">project 3</a></li>
        <li><a href="echart-4">project 4</a></li>
      </ul><br>

    </div>

    <div class="col-md-9 col-sm-9">
      <div class="well">
        <!-- <h4>Dashboard</h4> -->

        <div class="container" id="main" style="height: 600px">
        </div>


          <script type="text/javascript">
            // 基于准备好的dom，初始化echarts实例
            var myChart = echarts.init(document.getElementById('main'),'vintage');

            // 指定图表的配置项和数据

            myChart.showLoading();

            $.getJSON('/life-expectancy.json', function (data) {
                myChart.hideLoading();

                var itemStyle = {
                    normal: {
                        opacity: 0.8,
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowOffsetY: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                };

                var sizeFunction = function (x) {
                    var y = Math.sqrt(x / 5e8) + 0.1;
                    return y * 80;
                };
                // Schema:
                var schema = [
                    {name: 'Income', index: 0, text: '人均收入', unit: '美元'},
                    {name: 'LifeExpectancy', index: 1, text: '人均寿命', unit: '岁'},
                    {name: 'Population', index: 2, text: '总人口', unit: ''},
                    {name: 'Country', index: 3, text: '国家', unit: ''}
                ];

                option = {
                    baseOption: {
                        timeline: {
                            axisType: 'category',
                            orient: 'vertical',
                            autoPlay: true,
                            inverse: true,
                            playInterval: 1000,
                            left: null,
                            right: 0,
                            top: 20,
                            bottom: 20,
                            width: 55,
                            height: null,
                            label: {
                                normal: {
                                    textStyle: {
                                        color: '#999'
                                    }
                                },
                                emphasis: {
                                    textStyle: {
                                        color: '#fff'
                                    }
                                }
                            },
                            symbol: 'none',
                            lineStyle: {
                                color: '#555'
                            },
                            checkpointStyle: {
                                color: '#bbb',
                                borderColor: '#777',
                                borderWidth: 2
                            },
                            controlStyle: {
                                showNextBtn: false,
                                showPrevBtn: false,
                                normal: {
                                    color: '#666',
                                    borderColor: '#666'
                                },
                                emphasis: {
                                    color: '#aaa',
                                    borderColor: '#aaa'
                                }
                            },
                            data: []
                        },
                        backgroundColor: '#404a59',
                        title: [{
                            text: data.timeline[0],
                            textAlign: 'center',
                            left: '63%',
                            top: '55%',
                            textStyle: {
                                fontSize: 100,
                                color: 'rgba(255, 255, 255, 0.7)'
                            }
                        }, {
                            text: '各国人均寿命与GDP关系演变',
                            left: 'center',
                            top: 10,
                            textStyle: {
                                color: '#aaa',
                                fontWeight: 'normal',
                                fontSize: 20
                            }
                        }],
                        tooltip: {
                            padding: 5,
                            backgroundColor: '#222',
                            borderColor: '#777',
                            borderWidth: 1,
                            formatter: function (obj) {
                                var value = obj.value;
                                return schema[3].text + '：' + value[3] + '<br>'
                                        + schema[1].text + '：' + value[1] + schema[1].unit + '<br>'
                                        + schema[0].text + '：' + value[0] + schema[0].unit + '<br>'
                                        + schema[2].text + '：' + value[2] + '<br>';
                            }
                        },
                        grid: {
                            top: 100,
                            containLabel: true,
                            left: 30,
                            right: '110'
                        },
                        xAxis: {
                            type: 'log',
                            name: '人均收入',
                            max: 100000,
                            min: 300,
                            nameGap: 25,
                            nameLocation: 'middle',
                            nameTextStyle: {
                                fontSize: 18
                            },
                            splitLine: {
                                show: false
                            },
                            axisLine: {
                                lineStyle: {
                                    color: '#ccc'
                                }
                            },
                            axisLabel: {
                                formatter: '{value} $'
                            }
                        },
                        yAxis: {
                            type: 'value',
                            name: '平均寿命',
                            max: 100,
                            nameTextStyle: {
                                color: '#ccc',
                                fontSize: 18
                            },
                            axisLine: {
                                lineStyle: {
                                    color: '#ccc'
                                }
                            },
                            splitLine: {
                                show: false
                            },
                            axisLabel: {
                                formatter: '{value} 岁'
                            }
                        },
                        visualMap: [
                            {
                                show: false,
                                dimension: 3,
                                categories: data.counties,
                                calculable: true,
                                precision: 0.1,
                                textGap: 30,
                                textStyle: {
                                    color: '#ccc'
                                },
                                inRange: {
                                    color: (function () {
                                        var colors = ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'];
                                        return colors.concat(colors);
                                    })()
                                }
                            }
                        ],
                        series: [
                            {
                                type: 'scatter',
                                itemStyle: itemStyle,
                                data: data.series[0],
                                symbolSize: function(val) {
                                    return sizeFunction(val[2]);
                                }
                            }
                        ],
                        animationDurationUpdate: 1000,
                        animationEasingUpdate: 'quinticInOut'
                    },
                    options: []
                };

                for (var n = 0; n < data.timeline.length; n++) {
                    option.baseOption.timeline.data.push(data.timeline[n]);
                    option.options.push({
                        title: {
                            show: true,
                            'text': data.timeline[n] + ''
                        },
                        series: {
                            name: data.timeline[n],
                            type: 'scatter',
                            itemStyle: itemStyle,
                            data: data.series[n],
                            symbolSize: function(val) {
                                return sizeFunction(val[2]);
                            }
                        }
                    });
                }

                myChart.setOption(option);

            });


          </script>

      </div>

    </div>
  </div>
</div>
</body>
</html>
